/* Verilog netlist generated by SCUBA Diamond (64-bit) 3.11.0.396.4 */
/* Module Version: 5.8 */
/* C:\lscc\diamond\3.11_x64\ispfpga\bin\nt64\scuba.exe -w -n mipi_rx_ddr -lang verilog -synth lse -bus_exp 7 -bb -arch xo3c00f -type iol -mode in -io_type MIPI_LP -width 4 -freq_in 100 -gear 4 -clk eclk -del -1  */
/* Thu Jan 23 21:47:24 2020 */


// Generated by IPX but Modified output bus bit order 
`timescale 1 ns / 1 ps
module mipi_rx_ddr (alignwd, buf_clk_lp0i, buf_clk_lp0o, buf_clk_lp0t, 
    buf_clk_lp1i, buf_clk_lp1o, buf_clk_lp1t, clk, clk_lp0, clk_lp1, 
    clk_s, init, reset, rx_ready, sclk, oclk, buf_data_lp0i, buf_data_lp0o, 
    buf_data_lp0t, buf_data_lp1i, buf_data_lp1o, buf_data_lp1t, data_lp0, 
    data_lp1, datain, q)/* synthesis NGD_DRC_MASK=1 */;
    input wire alignwd;
    input wire buf_clk_lp0o;
    input wire buf_clk_lp0t;
    input wire buf_clk_lp1o;
    input wire buf_clk_lp1t;
    input wire clk;
    input wire clk_s;
    input wire init;
    input wire reset;
    input wire [3:0] buf_data_lp0o;
    input wire [3:0] buf_data_lp0t;
    input wire [3:0] buf_data_lp1o;
    input wire [3:0] buf_data_lp1t;
    input wire [3:0] datain;
    output wire buf_clk_lp0i;
    output wire buf_clk_lp1i;
    output wire rx_ready;
    output wire sclk;
	output wire oclk;
    output wire [3:0] buf_data_lp0i;
    output wire [3:0] buf_data_lp1i;
    output wire [31:0] q;
    inout wire clk_lp0;
    inout wire clk_lp1;
    inout wire [3:0] data_lp0;
    inout wire [3:0] data_lp1;

    wire scuba_vlo;
    wire opensync_0;
    wire opensync_1;
    wire opensync_cken;
    wire opensync_2;
    wire q7_3;
    wire q6_3;
    wire q5_3;
    wire q4_3;
    wire q3_3;
    wire q2_3;
    wire q1_3;
    wire q0_3;
    wire q7_2;
    wire q6_2;
    wire q5_2;
    wire q4_2;
    wire q3_2;
    wire q2_2;
    wire q1_2;
    wire q0_2;
    wire q7_1;
    wire q6_1;
    wire q5_1;
    wire q4_1;
    wire q3_1;
    wire q2_1;
    wire q1_1;
    wire q0_1;
    wire q7_0;
    wire q6_0;
    wire q5_0;
    wire q4_0;
    wire q3_0;
    wire q2_0;
    wire q1_0;
    wire q0_0;
    wire sclk_t;
	wire oclk_t;
    wire cdiv1;
    wire eclko;
    wire xstop;
    wire xstart;
    wire opensync_3;
    wire eclki;
    wire lock_chk;
    wire scuba_vhi;
    wire dataini_t3;
    wire dataini_t2;
    wire dataini_t1;
    wire dataini_t0;
    wire buf_clk;
    wire buf_dataini3;
    wire buf_dataini2;
    wire buf_dataini1;
    wire buf_dataini0;

    defparam LUT4_1.initval =  16'h0a78 ;
    ROM16X1A LUT4_1 (.AD3(opensync_0), .AD2(opensync_3), .AD1(lock_chk), 
        .AD0(init), .DO0(opensync_cken));

    VLO scuba_vlo_inst (.Z(scuba_vlo));

    defparam LUT4_0.initval =  16'hfffe ;
    ROM16X1A LUT4_0 (.AD3(opensync_0), .AD2(opensync_1), .AD1(scuba_vlo), 
        .AD0(scuba_vlo), .DO0(xstop));

    FD1P3BX FF_3 (.D(opensync_3), .SP(opensync_cken), .CK(clk_s), .PD(reset), 
        .Q(opensync_0))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_2 (.D(opensync_0), .SP(opensync_cken), .CK(clk_s), .CD(reset), 
        .Q(opensync_1))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_1 (.D(opensync_1), .SP(opensync_cken), .CK(clk_s), .CD(reset), 
        .Q(opensync_2))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_0 (.D(opensync_2), .SP(opensync_cken), .CK(clk_s), .CD(reset), 
        .Q(opensync_3))
             /* synthesis GSR="ENABLED" */;

    BB Inst9_BB (.I(buf_clk_lp1o), .T(buf_clk_lp1t), .O(buf_clk_lp1i), .B(clk_lp1))
             /* synthesis IO_TYPE="MIPI_LP" */;

    BB Inst8_BB (.I(buf_clk_lp0o), .T(buf_clk_lp0t), .O(buf_clk_lp0i), .B(clk_lp0))
             /* synthesis IO_TYPE="MIPI_LP" */;

    BB Inst7_BB3 (.I(buf_data_lp1o[3]), .T(buf_data_lp1t[3]), .O(buf_data_lp1i[3]), 
        .B(data_lp1[3]))
             /* synthesis IO_TYPE="MIPI_LP" */;

    BB Inst7_BB2 (.I(buf_data_lp1o[2]), .T(buf_data_lp1t[2]), .O(buf_data_lp1i[2]), 
        .B(data_lp1[2]))
             /* synthesis IO_TYPE="MIPI_LP" */;

    BB Inst7_BB1 (.I(buf_data_lp1o[1]), .T(buf_data_lp1t[1]), .O(buf_data_lp1i[1]), 
        .B(data_lp1[1]))
             /* synthesis IO_TYPE="MIPI_LP" */;

    BB Inst7_BB0 (.I(buf_data_lp1o[0]), .T(buf_data_lp1t[0]), .O(buf_data_lp1i[0]), 
        .B(data_lp1[0]))
             /* synthesis IO_TYPE="MIPI_LP" */;

    BB Inst6_BB3 (.I(buf_data_lp0o[3]), .T(buf_data_lp0t[3]), .O(buf_data_lp0i[3]), 
        .B(data_lp0[3]))
             /* synthesis IO_TYPE="MIPI_LP" */;

    BB Inst6_BB2 (.I(buf_data_lp0o[2]), .T(buf_data_lp0t[2]), .O(buf_data_lp0i[2]), 
        .B(data_lp0[2]))
             /* synthesis IO_TYPE="MIPI_LP" */;

    BB Inst6_BB1 (.I(buf_data_lp0o[1]), .T(buf_data_lp0t[1]), .O(buf_data_lp0i[1]), 
        .B(data_lp0[1]))
             /* synthesis IO_TYPE="MIPI_LP" */;

    BB Inst6_BB0 (.I(buf_data_lp0o[0]), .T(buf_data_lp0t[0]), .O(buf_data_lp0i[0]), 
        .B(data_lp0[0]))
             /* synthesis IO_TYPE="MIPI_LP" */;

    IDDRX4B Inst5_IDDRX4B3 (.D(dataini_t3), .ECLK(eclko), .SCLK(sclk_t), 
        .RST(reset), .ALIGNWD(alignwd), .Q0(q0_3), .Q1(q1_3), .Q2(q2_3), 
        .Q3(q3_3), .Q4(q4_3), .Q5(q5_3), .Q6(q6_3), .Q7(q7_3));

    IDDRX4B Inst5_IDDRX4B2 (.D(dataini_t2), .ECLK(eclko), .SCLK(sclk_t), 
        .RST(reset), .ALIGNWD(alignwd), .Q0(q0_2), .Q1(q1_2), .Q2(q2_2), 
        .Q3(q3_2), .Q4(q4_2), .Q5(q5_2), .Q6(q6_2), .Q7(q7_2));

    IDDRX4B Inst5_IDDRX4B1 (.D(dataini_t1), .ECLK(eclko), .SCLK(sclk_t), 
        .RST(reset), .ALIGNWD(alignwd), .Q0(q0_1), .Q1(q1_1), .Q2(q2_1), 
        .Q3(q3_1), .Q4(q4_1), .Q5(q5_1), .Q6(q6_1), .Q7(q7_1));

    IDDRX4B Inst5_IDDRX4B0 (.D(dataini_t0), .ECLK(eclko), .SCLK(sclk_t), 
        .RST(reset), .ALIGNWD(alignwd), .Q0(q0_0), .Q1(q1_0), .Q2(q2_0), 
        .Q3(q3_0), .Q4(q4_0), .Q5(q5_0), .Q6(q6_0), .Q7(q7_0));

    defparam Inst4_CLKDIVC.DIV = "4.0" ;
    CLKDIVC Inst4_CLKDIVC (.RST(reset), .CLKI(eclko), .ALIGNWD(alignwd), 
        .CDIV1(cdiv1), .CDIVX(sclk_t));

    defparam Inst5_CLKDIVC.DIV = "2.0" ;
    CLKDIVC Inst5_CLKDIVC (.RST(reset), .CLKI(eclko), .ALIGNWD(alignwd), 
        .CDIV1(cdiv1), .CDIVX(oclk_t));
		
    ECLKSYNCA Inst3_ECLKSYNCA (.ECLKI(eclki), .STOP(xstop), .ECLKO(eclko));

    VHI scuba_vhi_inst (.Z(scuba_vhi));

    IB Inst2_IB (.I(clk), .O(buf_clk))
             /* synthesis IO_TYPE="MIPI" */;

    IB Inst1_IB3 (.I(datain[3]), .O(buf_dataini3))
             /* synthesis IO_TYPE="MIPI" */;

    IB Inst1_IB2 (.I(datain[2]), .O(buf_dataini2))
             /* synthesis IO_TYPE="MIPI" */;

    IB Inst1_IB1 (.I(datain[1]), .O(buf_dataini1))
             /* synthesis IO_TYPE="MIPI" */;

    IB Inst1_IB0 (.I(datain[0]), .O(buf_dataini0))
             /* synthesis IO_TYPE="MIPI" */;

	assign oclk = oclk_t;
    assign sclk = sclk_t;
    assign q[31] = q7_3;
    assign q[30] = q6_3;
    assign q[29] = q5_3;
    assign q[28] = q4_3;
    assign q[27] = q3_3;
    assign q[26] = q2_3;
    assign q[25] = q1_3;
    assign q[24] = q0_3;
    assign q[23] = q7_2;
    assign q[22] = q6_2;
    assign q[21] = q5_2;
    assign q[20] = q4_2;
    assign q[19] = q3_2;
    assign q[18] = q2_2;
    assign q[17] = q1_2;
    assign q[16] = q0_2;
    assign q[15] = q7_1;
    assign q[14] = q6_1;
    assign q[13] = q5_1;
    assign q[12] = q4_1;
    assign q[11] = q3_1;
    assign q[10] = q2_1;
    assign q[9] = q1_1;
    assign q[8] = q0_1;
    assign q[7] = q7_0;
    assign q[6] = q6_0;
    assign q[5] = q5_0;
    assign q[4] = q4_0;
    assign q[3] = q3_0;
    assign q[2] = q2_0;
    assign q[1] = q1_0;
    assign q[0] = q0_0;
    assign rx_ready = xstart;
    assign xstart = opensync_3;
    assign eclki = buf_clk;
    assign lock_chk = scuba_vhi;
    assign dataini_t3 = buf_dataini3;
    assign dataini_t2 = buf_dataini2;
    assign dataini_t1 = buf_dataini1;
    assign dataini_t0 = buf_dataini0;


    // exemplar begin
    // exemplar attribute FF_3 GSR ENABLED
    // exemplar attribute FF_2 GSR ENABLED
    // exemplar attribute FF_1 GSR ENABLED
    // exemplar attribute FF_0 GSR ENABLED
    // exemplar attribute Inst9_BB IO_TYPE MIPI_LP
    // exemplar attribute Inst8_BB IO_TYPE MIPI_LP
    // exemplar attribute Inst7_BB3 IO_TYPE MIPI_LP
    // exemplar attribute Inst7_BB2 IO_TYPE MIPI_LP
    // exemplar attribute Inst7_BB1 IO_TYPE MIPI_LP
    // exemplar attribute Inst7_BB0 IO_TYPE MIPI_LP
    // exemplar attribute Inst6_BB3 IO_TYPE MIPI_LP
    // exemplar attribute Inst6_BB2 IO_TYPE MIPI_LP
    // exemplar attribute Inst6_BB1 IO_TYPE MIPI_LP
    // exemplar attribute Inst6_BB0 IO_TYPE MIPI_LP
    // exemplar attribute Inst2_IB IO_TYPE MIPI
    // exemplar attribute Inst1_IB3 IO_TYPE MIPI
    // exemplar attribute Inst1_IB2 IO_TYPE MIPI
    // exemplar attribute Inst1_IB1 IO_TYPE MIPI
    // exemplar attribute Inst1_IB0 IO_TYPE MIPI
    // exemplar end

endmodule
