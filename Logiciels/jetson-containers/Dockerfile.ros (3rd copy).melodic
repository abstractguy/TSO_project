#
# this dockerfile roughly follows the 'Ubuntu install of ROS Melodic' from:
#   http://wiki.ros.org/melodic/Installation/Ubuntu
#
ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.4.4
FROM ${BASE_IMAGE}

ARG ROS_PKG=ros_base
ENV ROS_DISTRO=melodic
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /workspace

# add the ROS deb repo to the apt sources list
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
                git \
		cmake \
		build-essential \
		curl \
		wget \
		gnupg2 \
		lsb-release \
    && rm -rf /var/lib/apt/lists/*

RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# install ROS packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
		ros-melodic-ros-base \
		ros-melodic-image-transport \
		ros-melodic-vision-msgs \
                python-rosdep \
                python-rosinstall \
                python-rosinstall-generator \
                python-wstool && \
    rm -rf /var/lib/apt/lists/*

# init/update rosdep
RUN apt-get update && \
    cd ${ROS_ROOT} && \
    rosdep init && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*

# install ROS packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
                python-pip \
                usbutils \
                ros-$(rosversion -d)-joint-state-publisher-gui && \
    rm -rf /var/lib/apt/lists/*

RUN echo 'KERNEL=="ttyUSB*", MODE="0666"' > /etc/udev/rules.d/ttyUSB.rules && \
    python2 -m pip uninstall pip && \
    apt install python-pip --reinstall

RUN pip2 install --upgrade pip==19.3.1 && \
    pip2 install wheel && \
    pip2 install pyuarm pyyaml pyserial rospkg catkin_pkg defusedxml netifaces tensorflow-gpu --user && \
    #LINE_TO_ADD=$(lsusb | grep Arduino | cut -d" " -f6 | xargs -I{} echo "UARM_HWID_KEYWORD = \"USB VID:PID={}\"") sed -i "s|^UARM_HWID_KEYWORD.*$|$LINE_TO_ADD|g" /usr/local/lib/python2.7/dist-packages/pyuarm/tools/list_uarms.py && \
    python2 -c 'import pyuarm.tools.firmware; pyuarm.tools.firmware' && \
    mkdir -p ~/catkin_ws/src && \
    cd ~/catkin_ws/src && \
    git clone https://github.com/abstractguy/UArmForROS.git && \
    cd ~/catkin_ws && \
    catkin_make && \
    echo "source /opt/ros/$(rosversion -d)/setup.bash" >> ~/.bashrc && \
    echo "source ~/catkin_ws/devel/setup.bash" >> ~/.bashrc

# setup entrypoint
COPY ./packages/ros_entrypoint.sh /ros_entrypoint.sh
RUN echo 'source ${ROS_ROOT}/setup.bash' >> /root/.bashrc
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
WORKDIR /
