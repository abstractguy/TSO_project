<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_u_f_servo_8cpp" kind="file" language="C++">
    <compoundname>UFServo.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>Servo.cpp<sp/>-<sp/>Interrupt<sp/>driven<sp/>Servo<sp/>library<sp/>for<sp/>Arduino<sp/>using<sp/>16<sp/>bit<sp/>timers-<sp/>Version<sp/>2</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>Copyright<sp/>(c)<sp/>2009<sp/>Michael<sp/>Margolis.<sp/><sp/>All<sp/>right<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARDUINO_ARCH_AVR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/interrupt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_f_servo_8h" kindref="compound">UFServo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>usToTicks(_us)<sp/><sp/><sp/><sp/>((<sp/>clockCyclesPerMicrosecond()*<sp/>_us)<sp/>/<sp/>8)<sp/><sp/><sp/><sp/><sp/>//<sp/>converts<sp/>microseconds<sp/>to<sp/>tick<sp/>(assumes<sp/>prescale<sp/>of<sp/>8)<sp/><sp/>//<sp/>12<sp/>Aug<sp/>2009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ticksToUs(_ticks)<sp/>((<sp/>(unsigned)_ticks<sp/>*<sp/>8)/<sp/>clockCyclesPerMicrosecond()<sp/>)<sp/>//<sp/>converts<sp/>from<sp/>ticks<sp/>back<sp/>to<sp/>microseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRIM_DURATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>compensation<sp/>ticks<sp/>to<sp/>trim<sp/>adjust<sp/>for<sp/>digitalWrite<sp/>delays<sp/>//<sp/>12<sp/>August<sp/>2009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>NBR_TIMERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MAX_SERVOS<sp/>/<sp/>SERVOS_PER_TIMER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structservo__t" kindref="compound">servo_t</ref><sp/>servos[<ref refid="_u_f_servo_8h_1a4259c40a55e489ed25c9f3cbb3be05ab" kindref="member">MAX_SERVOS</ref>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>array<sp/>of<sp/>servo<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>int8_t<sp/>Channel[<ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887a53f530c6e8ca85b1b3fbd5b21ef207a4" kindref="member">_Nbr_16timers</ref><sp/>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>counter<sp/>for<sp/>the<sp/>servo<sp/>being<sp/>pulsed<sp/>for<sp/>each<sp/>timer<sp/>(or<sp/>-1<sp/>if<sp/>refresh<sp/>interval)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">uint8_t<sp/>ServoCount<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>total<sp/>number<sp/>of<sp/>attached<sp/>servos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>convenience<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVO_INDEX_TO_TIMER(_servo_nbr)<sp/>((timer16_Sequence_t)(_servo_nbr<sp/>/<sp/>SERVOS_PER_TIMER))<sp/>//<sp/>returns<sp/>the<sp/>timer<sp/>controlling<sp/>this<sp/>servo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVO_INDEX_TO_CHANNEL(_servo_nbr)<sp/>(_servo_nbr<sp/>%<sp/>SERVOS_PER_TIMER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>returns<sp/>the<sp/>index<sp/>of<sp/>the<sp/>servo<sp/>on<sp/>this<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVO_INDEX(_timer,_channel)<sp/><sp/>((_timer*SERVOS_PER_TIMER)<sp/>+<sp/>_channel)<sp/><sp/><sp/><sp/><sp/>//<sp/>macro<sp/>to<sp/>access<sp/>servo<sp/>index<sp/>by<sp/>timer<sp/>and<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVO(_timer,_channel)<sp/><sp/>(servos[SERVO_INDEX(_timer,_channel)])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>macro<sp/>to<sp/>access<sp/>servo<sp/>class<sp/>by<sp/>timer<sp/>and<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVO_MIN()<sp/>(MIN_PULSE_WIDTH<sp/>-<sp/>this-&gt;min<sp/>*<sp/>4)<sp/><sp/>//<sp/>minimum<sp/>value<sp/>in<sp/>uS<sp/>for<sp/>this<sp/>servo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVO_MAX()<sp/>(MAX_PULSE_WIDTH<sp/>-<sp/>this-&gt;max<sp/>*<sp/>4)<sp/><sp/>//<sp/>maximum<sp/>value<sp/>in<sp/>uS<sp/>for<sp/>this<sp/>servo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/************<sp/>static<sp/>functions<sp/>common<sp/>to<sp/>all<sp/>instances<sp/>***********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_interrupts(<ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887" kindref="member">timer16_Sequence_t</ref><sp/>timer,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint16_t<sp/>*TCNTn,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint16_t*<sp/>OCRnA)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>Channel[timer]<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>*TCNTn<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>channel<sp/>set<sp/>to<sp/>-1<sp/>indicated<sp/>that<sp/>refresh<sp/>interval<sp/>completed<sp/>so<sp/>reset<sp/>the<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SERVO_INDEX(timer,Channel[timer])<sp/>&lt;<sp/>ServoCount<sp/>&amp;&amp;<sp/>SERVO(timer,Channel[timer]).Pin.isActive<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<sp/>SERVO(timer,Channel[timer]).Pin.nbr,LOW);<sp/></highlight><highlight class="comment">//<sp/>pulse<sp/>this<sp/>channel<sp/>low<sp/>if<sp/>activated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>Channel[timer]++;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increment<sp/>to<sp/>the<sp/>next<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SERVO_INDEX(timer,Channel[timer])<sp/>&lt;<sp/>ServoCount<sp/>&amp;&amp;<sp/>Channel[timer]<sp/>&lt;<sp/><ref refid="_u_f_servo_8h_1af16be8a4945638887eae35a30aa702c0" kindref="member">SERVOS_PER_TIMER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>*OCRnA<sp/>=<sp/>*TCNTn<sp/>+<sp/>SERVO(timer,Channel[timer]).ticks;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SERVO(timer,Channel[timer]).Pin.isActive<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>activated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<sp/>SERVO(timer,Channel[timer]).Pin.nbr,HIGH);<sp/></highlight><highlight class="comment">//<sp/>its<sp/>an<sp/>active<sp/>channel<sp/>so<sp/>pulse<sp/>it<sp/>high</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finished<sp/>all<sp/>channels<sp/>so<sp/>wait<sp/>for<sp/>the<sp/>refresh<sp/>period<sp/>to<sp/>expire<sp/>before<sp/>starting<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)*TCNTn)<sp/>+<sp/>4<sp/>&lt;<sp/>usToTicks(<ref refid="_u_f_servo_8h_1adfe85923c58edb0cfa15a0d026d7ee74" kindref="member">REFRESH_INTERVAL</ref>)<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>a<sp/>few<sp/>ticks<sp/>to<sp/>ensure<sp/>the<sp/>next<sp/>OCR1A<sp/>not<sp/>missed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*OCRnA<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)usToTicks(<ref refid="_u_f_servo_8h_1adfe85923c58edb0cfa15a0d026d7ee74" kindref="member">REFRESH_INTERVAL</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*OCRnA<sp/>=<sp/>*TCNTn<sp/>+<sp/>4;<sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>least<sp/>REFRESH_INTERVAL<sp/>has<sp/>elapsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>Channel[timer]<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>get<sp/>incremented<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>refresh<sp/>period<sp/>to<sp/>start<sp/>again<sp/>at<sp/>the<sp/>first<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIRING<sp/>//<sp/>Wiring<sp/>pre-defines<sp/>signal<sp/>handlers<sp/>so<sp/>don&apos;t<sp/>define<sp/>any<sp/>if<sp/>compiling<sp/>for<sp/>the<sp/>Wiring<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Interrupt<sp/>handlers<sp/>for<sp/>Arduino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_useTimer1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">SIGNAL<sp/>(TIMER1_COMPA_vect)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>handle_interrupts(<ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887a79ea1c528ccb762bc8533c2b5849026d" kindref="member">_timer1</ref>,<sp/>&amp;TCNT1,<sp/>&amp;OCR1A);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_useTimer3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">SIGNAL<sp/>(TIMER3_COMPA_vect)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>handle_interrupts(_timer3,<sp/>&amp;TCNT3,<sp/>&amp;OCR3A);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_useTimer4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">SIGNAL<sp/>(TIMER4_COMPA_vect)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>handle_interrupts(_timer4,<sp/>&amp;TCNT4,<sp/>&amp;OCR4A);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_useTimer5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">SIGNAL<sp/>(TIMER5_COMPA_vect)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>handle_interrupts(_timer5,<sp/>&amp;TCNT5,<sp/>&amp;OCR5A);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>WIRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Interrupt<sp/>handlers<sp/>for<sp/>Wiring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_useTimer1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Timer1Service()</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>handle_interrupts(<ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887a79ea1c528ccb762bc8533c2b5849026d" kindref="member">_timer1</ref>,<sp/>&amp;TCNT1,<sp/>&amp;OCR1A);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_useTimer3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Timer3Service()</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>handle_interrupts(_timer3,<sp/>&amp;TCNT3,<sp/>&amp;OCR3A);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initISR(<ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887" kindref="member">timer16_Sequence_t</ref><sp/>timer)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(_useTimer1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timer<sp/>==<sp/><ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887a79ea1c528ccb762bc8533c2b5849026d" kindref="member">_timer1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>TCCR1A<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>counting<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>TCCR1B<sp/>=<sp/>_BV(CS11);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>prescaler<sp/>of<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>TCNT1<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>timer<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR_ATmega8__)||<sp/>defined(__AVR_ATmega128__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>TIFR<sp/>|=<sp/>_BV(OCF1A);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>any<sp/>pending<sp/>interrupts;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>TIMSK<sp/>|=<sp/><sp/>_BV(OCIE1A)<sp/>;<sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>output<sp/>compare<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>if<sp/>not<sp/>ATmega8<sp/>or<sp/>ATmega128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>TIFR1<sp/>|=<sp/>_BV(OCF1A);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>any<sp/>pending<sp/>interrupts;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>TIMSK1<sp/>|=<sp/><sp/>_BV(OCIE1A)<sp/>;<sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>output<sp/>compare<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>timerAttach(TIMER1OUTCOMPAREA_INT,<sp/>Timer1Service);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(_useTimer3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timer<sp/>==<sp/>_timer3)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>TCCR3A<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>counting<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>TCCR3B<sp/>=<sp/>_BV(CS31);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>prescaler<sp/>of<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>TCNT3<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>timer<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR_ATmega128__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>TIFR<sp/>|=<sp/>_BV(OCF3A);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>any<sp/>pending<sp/>interrupts;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ETIMSK<sp/>|=<sp/>_BV(OCIE3A);<sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>output<sp/>compare<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>TIFR3<sp/>=<sp/>_BV(OCF3A);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>any<sp/>pending<sp/>interrupts;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>TIMSK3<sp/>=<sp/><sp/>_BV(OCIE3A)<sp/>;<sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>output<sp/>compare<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>timerAttach(TIMER3OUTCOMPAREA_INT,<sp/>Timer3Service);<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>Wiring<sp/>platform<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(_useTimer4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timer<sp/>==<sp/>_timer4)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>TCCR4A<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>counting<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>TCCR4B<sp/>=<sp/>_BV(CS41);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>prescaler<sp/>of<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>TCNT4<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>timer<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>TIFR4<sp/>=<sp/>_BV(OCF4A);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>any<sp/>pending<sp/>interrupts;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>TIMSK4<sp/>=<sp/><sp/>_BV(OCIE4A)<sp/>;<sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>output<sp/>compare<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(_useTimer5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timer<sp/>==<sp/>_timer5)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>TCCR5A<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>counting<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>TCCR5B<sp/>=<sp/>_BV(CS51);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>prescaler<sp/>of<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>TCNT5<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>timer<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>TIFR5<sp/>=<sp/>_BV(OCF5A);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>any<sp/>pending<sp/>interrupts;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>TIMSK5<sp/>=<sp/><sp/>_BV(OCIE5A)<sp/>;<sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>output<sp/>compare<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finISR(<ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887" kindref="member">timer16_Sequence_t</ref><sp/>timer)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//disable<sp/>use<sp/>of<sp/>the<sp/>given<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>WIRING<sp/><sp/><sp/>//<sp/>Wiring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timer<sp/>==<sp/><ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887a79ea1c528ccb762bc8533c2b5849026d" kindref="member">_timer1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>TIMSK1<sp/>&amp;=<sp/><sp/>~_BV(OCIE1A)<sp/>;<sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>timer<sp/>1<sp/>output<sp/>compare<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>TIMSK<sp/>&amp;=<sp/><sp/>~_BV(OCIE1A)<sp/>;<sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>timer<sp/>1<sp/>output<sp/>compare<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>timerDetach(TIMER1OUTCOMPAREA_INT);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timer<sp/>==<sp/>_timer3)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>TIMSK3<sp/>&amp;=<sp/>~_BV(OCIE3A);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>the<sp/>timer3<sp/>output<sp/>compare<sp/>A<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ETIMSK<sp/>&amp;=<sp/>~_BV(OCIE3A);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>the<sp/>timer3<sp/>output<sp/>compare<sp/>A<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>timerDetach(TIMER3OUTCOMPAREA_INT);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//For<sp/>arduino<sp/>-<sp/>in<sp/>future:<sp/>call<sp/>here<sp/>to<sp/>a<sp/>currently<sp/>undefined<sp/>function<sp/>to<sp/>reset<sp/>the<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isTimerActive(<ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887" kindref="member">timer16_Sequence_t</ref><sp/>timer)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>any<sp/>servo<sp/>is<sp/>active<sp/>on<sp/>this<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>channel=0;<sp/>channel<sp/>&lt;<sp/><ref refid="_u_f_servo_8h_1af16be8a4945638887eae35a30aa702c0" kindref="member">SERVOS_PER_TIMER</ref>;<sp/>channel++)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SERVO(timer,channel).Pin.isActive<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>end<sp/>of<sp/>static<sp/>functions<sp/>******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="class_servo_1a70b2b17657cf258cdcb57503bcf62cd2" kindref="member">Servo::Servo</ref>()</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ServoCount<sp/>&lt;<sp/><ref refid="_u_f_servo_8h_1a4259c40a55e489ed25c9f3cbb3be05ab" kindref="member">MAX_SERVOS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;servoIndex<sp/>=<sp/>ServoCount++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assign<sp/>a<sp/>servo<sp/>index<sp/>to<sp/>this<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>servos[this-&gt;servoIndex].<ref refid="structservo__t_1a9405b5e5266318f889ef6ff95a97943b" kindref="member">ticks</ref><sp/>=<sp/>usToTicks(<ref refid="_u_f_servo_8h_1a7eada57cb49e7b1766a813e4635d79bd" kindref="member">DEFAULT_PULSE_WIDTH</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>default<sp/>values<sp/><sp/>-<sp/>12<sp/>Aug<sp/>2009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;servoIndex<sp/>=<sp/><ref refid="_u_f_servo_8h_1ac4ebf3d89da7ee64b1f4726099b6d6ec" kindref="member">INVALID_SERVO</ref><sp/>;<sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>many<sp/>servos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">uint8_t<sp/><ref refid="class_servo_1aeccd2077f07ebc45250da14e72a0c461" kindref="member">Servo::attach</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pin)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_servo_1aeccd2077f07ebc45250da14e72a0c461" kindref="member">attach</ref>(pin,<sp/><ref refid="_u_f_servo_8h_1ad95c8286fc30ece77d632ad00a94d80e" kindref="member">MIN_PULSE_WIDTH</ref>,<sp/><ref refid="_u_f_servo_8h_1a57a10261e6511f97317cee9076692315" kindref="member">MAX_PULSE_WIDTH</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">uint8_t<sp/><ref refid="class_servo_1aeccd2077f07ebc45250da14e72a0c461" kindref="member">Servo::attach</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;servoIndex<sp/>&lt;<sp/><ref refid="_u_f_servo_8h_1a4259c40a55e489ed25c9f3cbb3be05ab" kindref="member">MAX_SERVOS</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(<sp/>pin,<sp/>OUTPUT)<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>servo<sp/>pin<sp/>to<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>servos[this-&gt;servoIndex].<ref refid="structservo__t_1a04bcc6cf13ea5cd2c4dabdc977e054cb" kindref="member">Pin</ref>.<ref refid="struct_servo_pin__t_1ad2ff0e34820e04a276e38d359021b03c" kindref="member">nbr</ref><sp/>=<sp/>pin;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>todo<sp/>min/max<sp/>check:<sp/>abs(min<sp/>-<sp/>MIN_PULSE_WIDTH)<sp/>/4<sp/>&lt;<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;min<sp/><sp/>=<sp/>(<ref refid="_u_f_servo_8h_1ad95c8286fc30ece77d632ad00a94d80e" kindref="member">MIN_PULSE_WIDTH</ref><sp/>-<sp/>min)/4;<sp/></highlight><highlight class="comment">//resolution<sp/>of<sp/>min/max<sp/>is<sp/>4<sp/>uS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;max<sp/><sp/>=<sp/>(<ref refid="_u_f_servo_8h_1a57a10261e6511f97317cee9076692315" kindref="member">MAX_PULSE_WIDTH</ref><sp/>-<sp/>max)/4;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>timer<sp/>if<sp/>it<sp/>has<sp/>not<sp/>already<sp/>been<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887" kindref="member">timer16_Sequence_t</ref><sp/>timer<sp/>=<sp/>SERVO_INDEX_TO_TIMER(servoIndex);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isTimerActive(timer)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initISR(timer);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>servos[this-&gt;servoIndex].<ref refid="structservo__t_1a04bcc6cf13ea5cd2c4dabdc977e054cb" kindref="member">Pin</ref>.<ref refid="struct_servo_pin__t_1aaf3c1889bb99bc6f936a3cfb6eba532a" kindref="member">isActive</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>must<sp/>be<sp/>set<sp/>after<sp/>the<sp/>check<sp/>for<sp/>isTimerActive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;servoIndex<sp/>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_servo_1a0b69ccc5c8b348ebaa84be91d973a362" kindref="member">Servo::detach</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>servos[this-&gt;servoIndex].<ref refid="structservo__t_1a04bcc6cf13ea5cd2c4dabdc977e054cb" kindref="member">Pin</ref>.<ref refid="struct_servo_pin__t_1aaf3c1889bb99bc6f936a3cfb6eba532a" kindref="member">isActive</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="_servo_timers_8h_1aa57046a4eafc371d1ae9a7f82f666887" kindref="member">timer16_Sequence_t</ref><sp/>timer<sp/>=<sp/>SERVO_INDEX_TO_TIMER(servoIndex);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isTimerActive(timer)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>finISR(timer);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_servo_1afec5b56a516c6b1aecd7c04f9c5b2479" kindref="member">Servo::write</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_calibration_8ino_1ac4f474c82e82cbb89ca7c36dd52be0ed" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>&lt;<sp/><ref refid="_u_f_servo_8h_1ad95c8286fc30ece77d632ad00a94d80e" kindref="member">MIN_PULSE_WIDTH</ref>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>treat<sp/>values<sp/>less<sp/>than<sp/>544<sp/>as<sp/>angles<sp/>in<sp/>degrees<sp/>(valid<sp/>values<sp/>in<sp/>microseconds<sp/>are<sp/>handled<sp/>as<sp/>microseconds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>&lt;<sp/>0)<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>&gt;<sp/>180)<sp/>value<sp/>=<sp/>180;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>value*=10;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>map(value,<sp/>0,<sp/>1800,<sp/>SERVO_MIN(),<sp/><sp/>SERVO_MAX());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(value-500,<sp/>HEX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_servo_1ac7fe3d6d2ea285ead98814bcfc417029" kindref="member">writeMicroseconds</ref>(value);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_servo_1ac7fe3d6d2ea285ead98814bcfc417029" kindref="member">Servo::writeMicroseconds</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>and<sp/>store<sp/>the<sp/>values<sp/>for<sp/>the<sp/>given<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>byte<sp/>channel<sp/>=<sp/>this-&gt;servoIndex;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(channel<sp/>&lt;<sp/><ref refid="_u_f_servo_8h_1a4259c40a55e489ed25c9f3cbb3be05ab" kindref="member">MAX_SERVOS</ref>)<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>channel<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>value<sp/>&lt;<sp/>SERVO_MIN()<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>pulse<sp/>width<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>SERVO_MIN();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>value<sp/>&gt;<sp/>SERVO_MAX()<sp/>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>SERVO_MAX();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>value<sp/>-<sp/>TRIM_DURATION;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>usToTicks(value);<sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>ticks<sp/>after<sp/>compensating<sp/>for<sp/>interrupt<sp/>overhead<sp/>-<sp/>12<sp/>Aug<sp/>2009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>oldSREG<sp/>=<sp/>SREG;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>servos[channel].<ref refid="structservo__t_1a9405b5e5266318f889ef6ff95a97943b" kindref="member">ticks</ref><sp/>=<sp/><ref refid="_calibration_8ino_1ac4f474c82e82cbb89ca7c36dd52be0ed" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>SREG<sp/>=<sp/>oldSREG;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_servo_1aaca0af33ba7d7c87c8a785b8eabf95a7" kindref="member">Servo::read</ref>()<sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>value<sp/>as<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>map(<sp/>this-&gt;<ref refid="class_servo_1a43950424d146c1414460066483d9561b" kindref="member">readMicroseconds</ref>()+1,<sp/>SERVO_MIN(),<sp/>SERVO_MAX(),<sp/>0,<sp/>180);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_servo_1a43950424d146c1414460066483d9561b" kindref="member">Servo::readMicroseconds</ref>()</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pulsewidth;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;servoIndex<sp/>!=<sp/><ref refid="_u_f_servo_8h_1ac4ebf3d89da7ee64b1f4726099b6d6ec" kindref="member">INVALID_SERVO</ref><sp/>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>pulsewidth<sp/>=<sp/>ticksToUs(servos[this-&gt;servoIndex].ticks)<sp/><sp/>+<sp/>TRIM_DURATION<sp/>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>aug<sp/>2009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>pulsewidth<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pulsewidth;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_servo_1a48607d47aa5678780b1b927102bd3b1b" kindref="member">Servo::attached</ref>()</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>servos[this-&gt;servoIndex].<ref refid="structservo__t_1a04bcc6cf13ea5cd2c4dabdc977e054cb" kindref="member">Pin</ref>.<ref refid="struct_servo_pin__t_1aaf3c1889bb99bc6f936a3cfb6eba532a" kindref="member">isActive</ref><sp/>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ARDUINO_ARCH_AVR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/src/UFServo.cpp"/>
  </compounddef>
</doxygen>
