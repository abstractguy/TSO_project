<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_u_arm_text_control2_80_8ino" kind="file" language="C++">
    <compoundname>UArmTextControl2.0.ino</compoundname>
    <includes refid="uarm__library_8h" local="no">uarm_library.h</includes>
    <incdepgraph>
      <node id="41">
        <label>UFServo.h</label>
        <link refid="_u_f_servo_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>linreg.h</label>
        <link refid="linreg_8h"/>
      </node>
      <node id="40">
        <label>Wire.h</label>
      </node>
      <node id="38">
        <label>Arduino.h</label>
      </node>
      <node id="37">
        <label>uarm_library.h</label>
        <link refid="uarm__library_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>EEPROM.h</label>
      </node>
      <node id="36">
        <label>/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino</label>
        <link refid="UArmTextControl2.0.ino"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1aa776889d7c765736d0ef8df36f4e1574" prot="public" static="no" mutable="no">
        <type>byte</type>
        <definition>byte currentStep</definition>
        <argsstring></argsstring>
        <name>currentStep</name>
        <initializer>= 255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This sketch is a communication protocol for uArm using Serial.</para><para>All commands must be wrapped in brackets- [command] Any string of commands must end with an endline char &apos;<linebreak/>
&apos; for the commands to be processed</para><para>Commands: [moveX::Y::Z::S#] Where # is a double, This will move the robot to an XYZ position, in S is speed in centimeters / second from the current location to goal location Send Example: [moveX15Y-15Z20S25] Return Example: [OK moveX15Y-15Z20S2]</para><para>[handV#] Where # is an angle between 0 and 180. This will set the angle of the robots hand Send Example: [handV90] Return Example: [OK handV90]</para><para>[pumpV#] Where # is either 1 or 0. 1 means pump on, 0 means pump off. Send Example: [pumpV1] Return Example: [OK pumpV1]</para><para>[attachS#] Attach servo #. Same as servo #&apos;s in <ref refid="uarm__library_8h" kindref="compound">uarm_library.h</ref> Send Example: [attachS1] Return Example: [OK attachS1]</para><para>[detachS#] Detach servo #. Same as servo #&apos;s in <ref refid="uarm__library_8h" kindref="compound">uarm_library.h</ref> Send Example: [detachS1] Return Example: [OK detachS1]</para><para>[buzzF::T#] Set the buzzer to F Frequency for T time Send Example: [buzzF261.63T1] Return Example: [OK buzzF261.63T1]</para><para>[gcoords] Returns the XYZ position of the robot Send Example: [gcoords] Return Example: [coordsX::Y::Z#]</para><para>[gAngleS#] Returns the angle of any particular servo. Send Example: [angleA1] Return Example: [angleA###.##]</para><para>[gmoving] Returns whether or not the robot is currently moving. Returns either 1 or 0 if it is moving or not. Send Example: [gmoving] Return Example: [movingM1]</para><para>[gtip] Returns whether or not the tip of the robot is currently pressed. Returns either 1 if the tip is pressed, 0 if not. Send Example: [gtip] Return Example: [tipV1] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="56" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1a7f24b7c6cb12a703ab83cc454c5f419b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tipPin</definition>
        <argsstring></argsstring>
        <name>tipPin</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="60" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1aecb21bb77eafd78503affe90d5c646be" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int buzzerPin</definition>
        <argsstring></argsstring>
        <name>buzzerPin</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="61" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int INTERP_INTVLS</definition>
        <argsstring></argsstring>
        <name>INTERP_INTVLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="65" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1ad82d4c3d60274a123e09a8b029444dd6" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long goalTime</definition>
        <argsstring></argsstring>
        <name>goalTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="66" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1abe4574649978940098bdcb1220c7fde5" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double goalTimeStep</definition>
        <argsstring></argsstring>
        <name>goalTimeStep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="67" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1ad8f739b670d0f419b1ced5f73ebf7be8" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double x_array[51]</definition>
        <argsstring>[51]</argsstring>
        <name>x_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="68" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1a28c3e596a1eb1cdf2abf4547670252dd" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double y_array[51]</definition>
        <argsstring>[51]</argsstring>
        <name>y_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="69" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1a6eaccd60e1a50799e6304a9aa199939c" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double z_array[51]</definition>
        <argsstring>[51]</argsstring>
        <name>z_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="70" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1ae2907ae42f334c7602f2ac09350ee545" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double currentHand</definition>
        <argsstring></argsstring>
        <name>currentHand</name>
        <initializer>=90</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="74" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1a0232fb914045b87f15f81543279c95b1" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long buzzerStopTime</definition>
        <argsstring></argsstring>
        <name>buzzerStopTime</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="78" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" prot="public" static="no" mutable="no">
        <type>String</type>
        <definition>String message</definition>
        <argsstring></argsstring>
        <name>message</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="81" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_u_arm_text_control2_80_8ino_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="85" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="_u_arm_text_control2_80_8ino_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="92" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="92" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="_u_arm_text_control2_80_8ino_1ac672a8c0d9c99f9f6be8d1febed949fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String runCommand</definition>
        <argsstring>(String cmnd)</argsstring>
        <name>runCommand</name>
        <param>
          <type>String</type>
          <declname>cmnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="128" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="128" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="_u_arm_text_control2_80_8ino_1a0f8a8a8541e8941b6b93c8825b3eebfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void getCommandValues</definition>
        <argsstring>(String cmnd, String parameters[], int parameterCount, float *valueArray)</argsstring>
        <name>getCommandValues</name>
        <param>
          <type>String</type>
          <declname>cmnd</declname>
        </param>
        <param>
          <type>String</type>
          <declname>parameters</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>parameterCount</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>valueArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="260" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="260" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="_u_arm_text_control2_80_8ino_1ad4c2d86bbcda64dac5f2241e8652679b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String isValidCommand</definition>
        <argsstring>(String cmnd, String parameters[], int parameterCount)</argsstring>
        <name>isValidCommand</name>
        <param>
          <type>String</type>
          <declname>cmnd</declname>
        </param>
        <param>
          <type>String</type>
          <declname>parameters</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>parameterCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="278" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="278" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="_u_arm_text_control2_80_8ino_1a6697b6497b0444d457ec6403412b94a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String parseNextCommand</definition>
        <argsstring>()</argsstring>
        <name>parseNextCommand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="317" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="317" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="_u_arm_text_control2_80_8ino_1aaa4a697522bd10f75a9957de80344764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setMove</definition>
        <argsstring>(double x, double y, double z, double goalSpeed)</argsstring>
        <name>setMove</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>goalSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="345" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="345" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="_u_arm_text_control2_80_8ino_1ae3ab31c9aa3085d09e96930a55a59145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isTimeToMove</definition>
        <argsstring>()</argsstring>
        <name>isTimeToMove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="419" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="419" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="_u_arm_text_control2_80_8ino_1ae64e3efcf50b63558f2a7d9be8ba33ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void moveStep</definition>
        <argsstring>()</argsstring>
        <name>moveStep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" line="444" column="1" bodyfile="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino" bodystart="444" bodyend="465"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="uarm__library_8h" kindref="compound">uarm_library.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;UFServo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>headers<sp/>should<sp/>must<sp/>include<sp/>these<sp/>four<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">//<sp/><sp/>The<sp/>array<sp/>of<sp/>&apos;steps&apos;<sp/>the<sp/>robot<sp/>will<sp/>take<sp/>to<sp/>get<sp/>to<sp/>it&apos;s<sp/>desired<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">byte<sp/><ref refid="_u_arm_text_control2_80_8ino_1aa776889d7c765736d0ef8df36f4e1574" kindref="member">currentStep</ref><sp/>=<sp/>255;<sp/><sp/></highlight><highlight class="comment">//The<sp/>current<sp/>&apos;step&apos;<sp/>the<sp/>robot<sp/>is<sp/>in,<sp/>in<sp/>the<sp/>movement<sp/>array.<sp/>-1<sp/>means<sp/>it<sp/>is<sp/>not<sp/>currently<sp/>moving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>Pin<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1a7f24b7c6cb12a703ab83cc454c5f419b" kindref="member">tipPin</ref><sp/><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1aecb21bb77eafd78503affe90d5c646be" kindref="member">buzzerPin</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Movement<sp/>Variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1ad82d4c3d60274a123e09a8b029444dd6" kindref="member">goalTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>When<sp/>the<sp/>robot<sp/>intends<sp/>to<sp/>complete<sp/>the<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1abe4574649978940098bdcb1220c7fde5" kindref="member">goalTimeStep</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1ad8f739b670d0f419b1ced5f73ebf7be8" kindref="member">x_array</ref>[51];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>of<sp/>50<sp/>interp<sp/>intervals<sp/>in<sp/>any<sp/>move,<sp/>so<sp/>make<sp/>each<sp/>arr<sp/>80<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1a28c3e596a1eb1cdf2abf4547670252dd" kindref="member">y_array</ref>[51];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1a6eaccd60e1a50799e6304a9aa199939c" kindref="member">z_array</ref>[51];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>These<sp/>variables<sp/>keep<sp/>track<sp/>of<sp/>positional<sp/>information<sp/>about<sp/>the<sp/>robot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1ae2907ae42f334c7602f2ac09350ee545" kindref="member">currentHand</ref>=90;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Current<sp/>hand<sp/>angle.<sp/>Used<sp/>for<sp/>move<sp/>commands<sp/>that<sp/>*require*<sp/>a<sp/>hand<sp/>angle,<sp/>due<sp/>to<sp/>uArm<sp/>library<sp/>design</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>What<sp/>time,<sp/>in<sp/>millis(),<sp/>that<sp/>the<sp/>buzzer<sp/>should<sp/>stop.<sp/>If<sp/>it&apos;s<sp/>-1,<sp/>then<sp/>the<sp/>buzzer<sp/>is<sp/>off.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0232fb914045b87f15f81543279c95b1" kindref="member">buzzerStopTime</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Communication<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">String<sp/><ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1a4fc01d736fe50cf5b977f755b675f11d" kindref="member">setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.setTimeout(30);<sp/></highlight><highlight class="comment">//<sp/><sp/>Makes<sp/>Serial.parseInt()<sp/>not<sp/>wait<sp/>a<sp/>long<sp/>time<sp/>after<sp/>an<sp/>integer<sp/>has<sp/>ended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_u_arm_text_control2_80_8ino_1a7f24b7c6cb12a703ab83cc454c5f419b" kindref="member">tipPin</ref>,INPUT_PULLUP);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1afe461d27b9c48d5921c00d521181f12f" kindref="member">loop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>any<sp/>commands<sp/>that<sp/>have<sp/>been<sp/>received<sp/>and<sp/>add<sp/>it<sp/>to<sp/>the<sp/>global<sp/>message<sp/>String<sp/>for<sp/>processing<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Serial.available()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>msg<sp/>=<sp/>Serial.readStringUntil(</highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref><sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref><sp/>+<sp/>String(msg);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Reevaluate<sp/>the<sp/>priority<sp/>of<sp/>these.<sp/>Should<sp/>commands<sp/>be<sp/>added<sp/>to<sp/>message<sp/>before<sp/>processing?<sp/>Should<sp/>step<sp/>be<sp/>done<sp/>b4<sp/>command<sp/>is<sp/>received?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_u_arm_text_control2_80_8ino_1ae3ab31c9aa3085d09e96930a55a59145" kindref="member">isTimeToMove</ref>())<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1ae64e3efcf50b63558f2a7d9be8ba33ee" kindref="member">moveStep</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_u_arm_text_control2_80_8ino_1a0232fb914045b87f15f81543279c95b1" kindref="member">buzzerStopTime</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_u_arm_text_control2_80_8ino_1a0232fb914045b87f15f81543279c95b1" kindref="member">buzzerStopTime</ref><sp/>&lt;<sp/>millis())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noTone(<ref refid="_u_arm_text_control2_80_8ino_1aecb21bb77eafd78503affe90d5c646be" kindref="member">buzzerPin</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0232fb914045b87f15f81543279c95b1" kindref="member">buzzerStopTime</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>anything<sp/>in<sp/>the<sp/>message<sp/>string,<sp/>then<sp/>process<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref>.length()<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>cmnd<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1a6697b6497b0444d457ec6403412b94a9" kindref="member">parseNextCommand</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>response<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ac672a8c0d9c99f9f6be8d1febed949fd" kindref="member">runCommand</ref>(cmnd);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(response.length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(response);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">String<sp/><ref refid="_u_arm_text_control2_80_8ino_1ac672a8c0d9c99f9f6be8d1febed949fd" kindref="member">runCommand</ref>(String<sp/>cmnd){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>moveParameters[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{F(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">),<sp/>F(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">),<sp/>F(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">),<sp/>F(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>pumpParameters[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{F(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>attachDetachParameters[]<sp/>=<sp/>{F(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>handParameters[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{F(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>buzzerParameters[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{F(</highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">),<sp/>F(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>gServoParameters[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{F(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>save<sp/>memory,<sp/>create<sp/>the<sp/>&quot;[OK&quot;<sp/>and<sp/>&quot;]\n&quot;<sp/>right<sp/>now,<sp/>in<sp/>flash<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>ok<sp/><sp/><sp/><sp/>=<sp/>F(</highlight><highlight class="stringliteral">&quot;[OK<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>endB<sp/><sp/>=<sp/>F(</highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>Command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;move&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Error/validity<sp/>checking<sp/>of<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>errorResponse<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad4c2d86bbcda64dac5f2241e8652679b" kindref="member">isValidCommand</ref>(cmnd,<sp/>moveParameters,<sp/>4);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorResponse.length()<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorResponse;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Create<sp/>action<sp/>and<sp/>respond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>values[4];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0f8a8a8541e8941b6b93c8825b3eebfc" kindref="member">getCommandValues</ref>(cmnd,<sp/>moveParameters,<sp/>4,<sp/>values);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1aaa4a697522bd10f75a9957de80344764" kindref="member">setMove</ref>(values[0],<sp/>values[1],<sp/>values[2],<sp/>values[3]);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok<sp/>+<sp/>cmnd<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>status<sp/>of<sp/>the<sp/>pump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;pump&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>errorResponse<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad4c2d86bbcda64dac5f2241e8652679b" kindref="member">isValidCommand</ref>(cmnd,<sp/>pumpParameters,<sp/>1);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorResponse.length()<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorResponse;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>values[1];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0f8a8a8541e8941b6b93c8825b3eebfc" kindref="member">getCommandValues</ref>(cmnd,<sp/>pumpParameters,<sp/>1,<sp/>values);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1a983b6a63e8c76c27bb1f4b1e51ef059a" kindref="member">pump_on</ref>();<sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>&lt;=<sp/>0)<sp/>{<sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1a908b2f1a111b14ffdfc52bce7ccffd3d" kindref="member">pump_off</ref>();<sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok<sp/>+<sp/>cmnd<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attach<sp/>a<sp/>servo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;attach&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>errorResponse<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad4c2d86bbcda64dac5f2241e8652679b" kindref="member">isValidCommand</ref>(cmnd,<sp/>attachDetachParameters,<sp/>1);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorResponse.length()<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorResponse;<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>values[1];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0f8a8a8541e8941b6b93c8825b3eebfc" kindref="member">getCommandValues</ref>(cmnd,<sp/>attachDetachParameters,<sp/>1,<sp/>values);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>==<sp/>1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1afa56f149c58d1577804de94ea8235d97" kindref="member">set_servo_status</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="uarm__library_8h_1aedb0af3f18647ea800b5e7591f44fff5" kindref="member">SERVO_ROT_NUM</ref>);<sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>==<sp/>2)<sp/>{<sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1afa56f149c58d1577804de94ea8235d97" kindref="member">set_servo_status</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="uarm__library_8h_1aad9c39f9a13fb794436e7f28a66ec957" kindref="member">SERVO_LEFT_NUM</ref>);<sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>==<sp/>3)<sp/>{<sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1afa56f149c58d1577804de94ea8235d97" kindref="member">set_servo_status</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="uarm__library_8h_1ad6c6879b0915a777fc2165e9e1b324a7" kindref="member">SERVO_RIGHT_NUM</ref>);<sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>==<sp/>4)<sp/>{<sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1afa56f149c58d1577804de94ea8235d97" kindref="member">set_servo_status</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="uarm__library_8h_1a21176f343ea2d7a582d08884193c07e9" kindref="member">SERVO_HAND_ROT_NUM</ref>);<sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F(</highlight><highlight class="stringliteral">&quot;[ERROR:<sp/>Servo<sp/>number<sp/>does<sp/>not<sp/>exist]\n&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok<sp/>+<sp/>cmnd<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detach<sp/>a<sp/>servo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;detach&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>errorResponse<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad4c2d86bbcda64dac5f2241e8652679b" kindref="member">isValidCommand</ref>(cmnd,<sp/>attachDetachParameters,<sp/>1);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorResponse.length()<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorResponse;<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>values[1];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0f8a8a8541e8941b6b93c8825b3eebfc" kindref="member">getCommandValues</ref>(cmnd,<sp/>attachDetachParameters,<sp/>1,<sp/>values);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>==<sp/>1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1afa56f149c58d1577804de94ea8235d97" kindref="member">set_servo_status</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="uarm__library_8h_1aedb0af3f18647ea800b5e7591f44fff5" kindref="member">SERVO_ROT_NUM</ref>);<sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>==<sp/>2)<sp/>{<ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1afa56f149c58d1577804de94ea8235d97" kindref="member">set_servo_status</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="uarm__library_8h_1aad9c39f9a13fb794436e7f28a66ec957" kindref="member">SERVO_LEFT_NUM</ref>);<sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>==<sp/>3)<sp/>{<ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1afa56f149c58d1577804de94ea8235d97" kindref="member">set_servo_status</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="uarm__library_8h_1ad6c6879b0915a777fc2165e9e1b324a7" kindref="member">SERVO_RIGHT_NUM</ref>);<sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>==<sp/>4)<sp/>{<ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1afa56f149c58d1577804de94ea8235d97" kindref="member">set_servo_status</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="uarm__library_8h_1a21176f343ea2d7a582d08884193c07e9" kindref="member">SERVO_HAND_ROT_NUM</ref>);<sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;[ERROR:<sp/>Servo<sp/>number<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(values[0])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exist]\n&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok<sp/>+<sp/>cmnd<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>hands<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;hand&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>errorResponse<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad4c2d86bbcda64dac5f2241e8652679b" kindref="member">isValidCommand</ref>(cmnd,<sp/>handParameters,<sp/>1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorResponse.length()<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorResponse;<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>values[1];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0f8a8a8541e8941b6b93c8825b3eebfc" kindref="member">getCommandValues</ref>(cmnd,<sp/>handParameters,<sp/>1,<sp/>values);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>&lt;<sp/>0<sp/>||<sp/>values[0]<sp/>&gt;<sp/>180)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F(</highlight><highlight class="stringliteral">&quot;[ERROR:<sp/>new<sp/>value<sp/>is<sp/>not<sp/>&gt;<sp/>0<sp/>or<sp/>&lt;<sp/>180]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1ae2907ae42f334c7602f2ac09350ee545" kindref="member">currentHand</ref><sp/>=<sp/>values[0];<sp/></highlight><highlight class="comment">//uarm.inputToReal(SERVO_HAND_ROT_NUM,<sp/>values[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1a589664e5cbc560163f68e9152ff64bd1" kindref="member">g_servo_hand_rot</ref>.<ref refid="class_servo_1afec5b56a516c6b1aecd7c04f9c5b2479" kindref="member">write</ref>(<ref refid="_u_arm_text_control2_80_8ino_1ae2907ae42f334c7602f2ac09350ee545" kindref="member">currentHand</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok<sp/>+<sp/>cmnd<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//[buzzF261.63T1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>Buzzer<sp/>for<sp/>a<sp/>predetermined<sp/>amount<sp/>of<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;buzz&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>errorResponse<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad4c2d86bbcda64dac5f2241e8652679b" kindref="member">isValidCommand</ref>(cmnd,<sp/>buzzerParameters,<sp/>2);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorResponse.length()<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorResponse;<sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>values[2];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0f8a8a8541e8941b6b93c8825b3eebfc" kindref="member">getCommandValues</ref>(cmnd,<sp/>buzzerParameters,<sp/>2,<sp/>values);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(values[0]<sp/>&lt;<sp/>0<sp/>||<sp/>values[1]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F(</highlight><highlight class="stringliteral">&quot;[ERROR:<sp/>F<sp/>&amp;<sp/>T<sp/>should<sp/>be<sp/>&gt;<sp/>0]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tone(<ref refid="_u_arm_text_control2_80_8ino_1aecb21bb77eafd78503affe90d5c646be" kindref="member">buzzerPin</ref>,<sp/>values[0]);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0232fb914045b87f15f81543279c95b1" kindref="member">buzzerStopTime</ref><sp/>=<sp/>millis()<sp/>+<sp/>int(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(values[1])<sp/>*<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(1000));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok<sp/>+<sp/>cmnd<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>coords<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;gcoords&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uarm.getCalXYZ(x,<sp/>y,<sp/>z);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ab8db96e35368bd928ea3c355e3f9609c" kindref="member">angle_to_coordinate</ref>(<ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ad943083ee0d9eb9f1473d05f19c21a7a" kindref="member">read_servo_angle</ref>(<ref refid="uarm__library_8h_1aedb0af3f18647ea800b5e7591f44fff5" kindref="member">SERVO_ROT_NUM</ref>),<sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ad943083ee0d9eb9f1473d05f19c21a7a" kindref="member">read_servo_angle</ref>(<ref refid="uarm__library_8h_1aad9c39f9a13fb794436e7f28a66ec957" kindref="member">SERVO_LEFT_NUM</ref>),<sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ad943083ee0d9eb9f1473d05f19c21a7a" kindref="member">read_servo_angle</ref>(<ref refid="uarm__library_8h_1ad6c6879b0915a777fc2165e9e1b324a7" kindref="member">SERVO_RIGHT_NUM</ref>),<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;[coordsX&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(x)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(z)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>angle<sp/>of<sp/>a<sp/>particular<sp/>servo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;gangle&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>errorResponse<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad4c2d86bbcda64dac5f2241e8652679b" kindref="member">isValidCommand</ref>(cmnd,<sp/>gServoParameters,<sp/>1);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorResponse.length()<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorResponse;<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>values[1];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0f8a8a8541e8941b6b93c8825b3eebfc" kindref="member">getCommandValues</ref>(cmnd,<sp/>gServoParameters,<sp/>1,<sp/>values);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ad943083ee0d9eb9f1473d05f19c21a7a" kindref="member">read_servo_angle</ref>(values[0]);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;[angleA&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(angle)<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>robot<sp/>is<sp/>currently<sp/>moving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;gmoving&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isMoving<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_u_arm_text_control2_80_8ino_1aa776889d7c765736d0ef8df36f4e1574" kindref="member">currentStep</ref><sp/>==<sp/>255)<sp/>{<sp/>isMoving<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timespend<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad82d4c3d60274a123e09a8b029444dd6" kindref="member">goalTime</ref><sp/>-<sp/>millis();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>actTS<sp/>=<sp/>(timespend)<sp/>/<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref><sp/>-<sp/><ref refid="_u_arm_text_control2_80_8ino_1aa776889d7c765736d0ef8df36f4e1574" kindref="member">currentStep</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;[movingM&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(isMoving)<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>tip<sp/>sensor<sp/>of<sp/>the<sp/>robot<sp/>is<sp/>pressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.indexOf(F(</highlight><highlight class="stringliteral">&quot;gtip&quot;</highlight><highlight class="normal">))<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isTipPressed<sp/>=<sp/>digitalRead(2);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;[tipV&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(isTipPressed)<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cmnd.length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;[ERROR:<sp/>No<sp/>such<sp/>command:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>cmnd<sp/>+<sp/>endB;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1a0f8a8a8541e8941b6b93c8825b3eebfc" kindref="member">getCommandValues</ref>(String<sp/>cmnd,<sp/>String<sp/>parameters[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parameterCount,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*valueArray){</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index[parameterCount];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>parameterCount;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index[p]<sp/>=<sp/>cmnd.indexOf(parameters[p]);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>parameterCount;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p<sp/>&lt;<sp/>parameterCount<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueArray[p]<sp/>=<sp/>cmnd.substring(index[p]<sp/>+<sp/>1,<sp/>index[p<sp/>+<sp/>1]).toFloat();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueArray[p]<sp/>=<sp/>cmnd.substring(index[p]<sp/>+<sp/>1).toFloat();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">String<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad4c2d86bbcda64dac5f2241e8652679b" kindref="member">isValidCommand</ref>(String<sp/>cmnd,<sp/>String<sp/>parameters[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parameterCount){</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index[parameterCount];</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>errorMissingParameter<sp/>=<sp/>F(</highlight><highlight class="stringliteral">&quot;[ERROR:<sp/>Missing<sp/>Parameter<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>errorWrongOrder<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>F(</highlight><highlight class="stringliteral">&quot;[ERROR:<sp/>Incorrect<sp/>Parameter<sp/>order<sp/>on<sp/>parameter<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>endingBracket<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>F(</highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Get<sp/>all<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>parameterCount;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index[p]<sp/>=<sp/>cmnd.indexOf(parameters[p]);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index[p]<sp/>==<sp/>-1)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorMissingParameter<sp/>+<sp/>parameters[p]<sp/>+<sp/>F(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>cmnd<sp/>+<sp/>endingBracket;<sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Check<sp/>that<sp/>the<sp/>commands<sp/>are<sp/>in<sp/>the<sp/>correct<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>parameterCount;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parameterCount<sp/>==<sp/>1)<sp/>{</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p<sp/>&lt;<sp/>parameterCount<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(index[p]<sp/>&lt;<sp/>index[p<sp/>+<sp/>1]))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorWrongOrder<sp/>+<sp/>parameters[p]<sp/>+<sp/>endingBracket;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(index[p]<sp/>&gt;<sp/>index[p-1]))<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorWrongOrder<sp/>+<sp/>parameters[p]<sp/>+<sp/>endingBracket;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Check<sp/>that<sp/>there<sp/>is<sp/>something<sp/>between<sp/>each<sp/>parameter<sp/>(AKA,<sp/>the<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>parameterCount;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p<sp/>&lt;<sp/>parameterCount<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((index[p<sp/>+<sp/>1]<sp/>-<sp/>index[p])<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorMissingParameter<sp/>+<sp/>parameters[p]<sp/>+<sp/>endingBracket;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index[p]<sp/>==<sp/>cmnd.length()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorMissingParameter<sp/>+<sp/>parameters[p]<sp/>+<sp/>endingBracket;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">String<sp/><ref refid="_u_arm_text_control2_80_8ino_1a6697b6497b0444d457ec6403412b94a9" kindref="member">parseNextCommand</ref>()<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>None<sp/>=<sp/>F(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmndStart<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref>.indexOf(</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmndEnd<sp/><sp/><sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref>.indexOf(</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PERFORM<sp/>CLEANING-UP<sp/>PROCEDURES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmndStart<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>cmndEnd<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>None;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmndStart<sp/>==<sp/>-1<sp/>||<sp/>cmndEnd<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>None;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>message<sp/>starts<sp/>with<sp/>][</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmndStart<sp/>&gt;<sp/>cmndEnd)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref>.remove(0,<sp/>cmndEnd<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>None;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally,<sp/>pull<sp/>the<sp/>command<sp/>out,<sp/>remove<sp/>the<sp/>brackets,<sp/>make<sp/>it<sp/>lowercase,<sp/>and<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>cmnd<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref>.substring(cmndStart<sp/>+<sp/>1,<sp/>cmndEnd);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a2836db0f8ae4563c70935b5e514bdc21" kindref="member">message</ref>.remove(0,<sp/>cmndEnd<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmnd.toLowerCase();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmnd;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1aaa4a697522bd10f75a9957de80344764" kindref="member">setMove</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>goalSpeed)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>the<sp/>range<sp/>of<sp/>the<sp/>uArm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>limit<sp/>=<sp/>sqrt((x*x<sp/>+<sp/>y*y));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit<sp/>&gt;<sp/>32)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>32/limit;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x<sp/>*<sp/>k;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>y<sp/>*<sp/>k;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>current<sp/>XYZ<sp/>position<sp/>using<sp/>cached<sp/>servo<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_x;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_y;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_z;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>cur_rot<sp/><sp/><sp/>=<sp/>uarm.readAngle(SERVO_ROT_NUM);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>cur_right<sp/>=<sp/>uarm.readAngle(SERVO_RIGHT_NUM);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>cur_left<sp/><sp/>=<sp/>uarm.readAngle(SERVO_LEFT_NUM);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cur_rot<sp/><sp/><sp/>=<sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ad943083ee0d9eb9f1473d05f19c21a7a" kindref="member">read_servo_angle</ref>(<ref refid="uarm__library_8h_1aedb0af3f18647ea800b5e7591f44fff5" kindref="member">SERVO_ROT_NUM</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cur_left<sp/><sp/><sp/>=<sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ad943083ee0d9eb9f1473d05f19c21a7a" kindref="member">read_servo_angle</ref>(<ref refid="uarm__library_8h_1aad9c39f9a13fb794436e7f28a66ec957" kindref="member">SERVO_LEFT_NUM</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cur_right<sp/>=<sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ad943083ee0d9eb9f1473d05f19c21a7a" kindref="member">read_servo_angle</ref>(<ref refid="uarm__library_8h_1ad6c6879b0915a777fc2165e9e1b324a7" kindref="member">SERVO_RIGHT_NUM</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ab8db96e35368bd928ea3c355e3f9609c" kindref="member">angle_to_coordinate</ref>(cur_rot,<sp/><sp/>cur_left,<sp/>cur_right,<sp/>current_x,<sp/>current_y,<sp/>current_z);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>target<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tgt_rot;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tgt_left;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tgt_right;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ae3d5c2249f60c69798050d058686fe15" kindref="member">coordinate_to_angle</ref>(x,<sp/>y,<sp/>z,<sp/>tgt_rot,<sp/>tgt_left,<sp/>tgt_right);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>length,<sp/>to<sp/>calculate<sp/>the<sp/>#<sp/>of<sp/>interpolations<sp/>that<sp/>will<sp/>be<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta_rot<sp/><sp/><sp/>=<sp/>abs(tgt_rot<sp/><sp/><sp/>-<sp/>cur_rot);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta_left<sp/><sp/>=<sp/>abs(tgt_left<sp/><sp/>-<sp/>cur_left);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta_right<sp/>=<sp/>abs(tgt_right<sp/>-<sp/>cur_right);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CUSTOM:<sp/>Use<sp/>the<sp/>robots<sp/>current<sp/>position<sp/>and<sp/>its<sp/>desired<sp/>destination<sp/>to<sp/>calculate<sp/>the<sp/>amount<sp/>of<sp/>time<sp/>for<sp/>the<sp/>move<sp/>to<sp/>occur<sp/>within</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance<sp/><sp/><sp/>=<sp/>pow(pow(x-current_x,<sp/>2)<sp/>+<sp/>pow(y-current_y,<sp/>2)<sp/>+<sp/>pow(z-current_z,<sp/>2),<sp/>.5);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>number<sp/>of<sp/>interpolations<sp/>for<sp/>this<sp/>move<sp/>+<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref><sp/>=<sp/>max(delta_rot,delta_left);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref><sp/>=<sp/>max(<ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>,delta_right);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref><sp/>=<sp/>(<ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>&lt;50)<sp/>?<sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref><sp/>:<sp/>50;<sp/></highlight><highlight class="comment">//<sp/>Max<sp/>it<sp/>out<sp/>at<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>movement<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ab92828f4da95e9b1007683b658552268" kindref="member">INTERP_INTVLS</ref><sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ac8ea033ef44b3e79c46b63846dd26b03" kindref="member">interpolate</ref>(current_x,<sp/>x,<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad8f739b670d0f419b1ced5f73ebf7be8" kindref="member">x_array</ref>,<sp/><ref refid="uarm__library_8h_1a1d86866e45d3a98fc2e510bfb5e6e547" kindref="member">INTERP_LINEAR</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ac8ea033ef44b3e79c46b63846dd26b03" kindref="member">interpolate</ref>(current_y,<sp/>y,<sp/><ref refid="_u_arm_text_control2_80_8ino_1a28c3e596a1eb1cdf2abf4547670252dd" kindref="member">y_array</ref>,<sp/><ref refid="uarm__library_8h_1a1d86866e45d3a98fc2e510bfb5e6e547" kindref="member">INTERP_LINEAR</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ac8ea033ef44b3e79c46b63846dd26b03" kindref="member">interpolate</ref>(current_z,<sp/>z,<sp/><ref refid="_u_arm_text_control2_80_8ino_1a6eaccd60e1a50799e6304a9aa199939c" kindref="member">z_array</ref>,<sp/><ref refid="uarm__library_8h_1a1d86866e45d3a98fc2e510bfb5e6e547" kindref="member">INTERP_LINEAR</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>final<sp/>cell<sp/>of<sp/>the<sp/>interpolation<sp/>be<sp/>the<sp/>actual<sp/>destination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1ad8f739b670d0f419b1ced5f73ebf7be8" kindref="member">x_array</ref>[<ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a28c3e596a1eb1cdf2abf4547670252dd" kindref="member">y_array</ref>[<ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>]<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1a6eaccd60e1a50799e6304a9aa199939c" kindref="member">z_array</ref>[<ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>]<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uarm.interpolate(cur_hand,<sp/>hand_angle,<sp/>hand_array,<sp/>INTERP_LINEAR);<sp/><sp/>//<sp/>TODO:<sp/>ADD<sp/>WRIST<sp/>INTERPOLATIONS<sp/>LATER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_spend<sp/>=<sp/>distance<sp/>/<sp/>goalSpeed;<sp/></highlight><highlight class="comment">//<sp/>Speed<sp/>of<sp/>the<sp/>robot<sp/>in<sp/>cm/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1aa776889d7c765736d0ef8df36f4e1574" kindref="member">currentStep</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1ad82d4c3d60274a123e09a8b029444dd6" kindref="member">goalTime</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>millis()<sp/>+<sp/>time_spend<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1abe4574649978940098bdcb1220c7fde5" kindref="member">goalTimeStep</ref><sp/>=<sp/>abs((time_spend<sp/>*<sp/>1000)<sp/>/<sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>);<sp/></highlight><highlight class="comment">//<sp/>How<sp/>long<sp/>each<sp/>timestep<sp/>*should*<sp/>take</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1ae3ab31c9aa3085d09e96930a55a59145" kindref="member">isTimeToMove</ref>(){</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>currently<sp/>in<sp/>&quot;move&quot;<sp/>mode,<sp/>return<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_u_arm_text_control2_80_8ino_1aa776889d7c765736d0ef8df36f4e1574" kindref="member">currentStep</ref><sp/>&gt;=<sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>currently<sp/>due<sp/>for<sp/>another<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeLeft<sp/>=<sp/><ref refid="_u_arm_text_control2_80_8ino_1ad82d4c3d60274a123e09a8b029444dd6" kindref="member">goalTime</ref><sp/>-<sp/>millis();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeLeft<sp/>/<sp/>(<ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref><sp/>-<sp/><ref refid="_u_arm_text_control2_80_8ino_1aa776889d7c765736d0ef8df36f4e1574" kindref="member">currentStep</ref>)<sp/><sp/><sp/><sp/>&lt;<sp/><sp/><sp/><sp/><sp/><ref refid="_u_arm_text_control2_80_8ino_1abe4574649978940098bdcb1220c7fde5" kindref="member">goalTimeStep</ref>)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>robot<sp/>has<sp/>run<sp/>out<sp/>of<sp/>time,<sp/>then<sp/>of<sp/>course<sp/>it<sp/>has<sp/>to<sp/>move<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeLeft<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_arm_text_control2_80_8ino_1ae64e3efcf50b63558f2a7d9be8ba33ee" kindref="member">moveStep</ref>()<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Move<sp/>one<sp/>&apos;step&apos;<sp/>towards<sp/>the<sp/>desired<sp/>location,<sp/>but<sp/>only<sp/>if<sp/>the<sp/>timing<sp/>is<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Actually<sp/>perform<sp/>the<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rot,left,<sp/>right;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>target<sp/>angle<sp/>for<sp/>the<sp/>step,<sp/>and<sp/>write<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ae3d5c2249f60c69798050d058686fe15" kindref="member">coordinate_to_angle</ref>(<ref refid="_u_arm_text_control2_80_8ino_1ad8f739b670d0f419b1ced5f73ebf7be8" kindref="member">x_array</ref>[<ref refid="_u_arm_text_control2_80_8ino_1aa776889d7c765736d0ef8df36f4e1574" kindref="member">currentStep</ref>],<sp/><ref refid="_u_arm_text_control2_80_8ino_1a28c3e596a1eb1cdf2abf4547670252dd" kindref="member">y_array</ref>[currentStep],<sp/><ref refid="_u_arm_text_control2_80_8ino_1a6eaccd60e1a50799e6304a9aa199939c" kindref="member">z_array</ref>[currentStep],<sp/>rot,<sp/>left,<sp/>right);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ad49f00b82c7217aea14992519db644c9" kindref="member">write_servo_angle</ref>(rot,<sp/>left,<sp/>right,<sp/><ref refid="_u_arm_text_control2_80_8ino_1ae2907ae42f334c7602f2ac09350ee545" kindref="member">currentHand</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStep<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentStep<sp/>==<sp/><ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>final<sp/>move,<sp/>to<sp/>ensure<sp/>arrival<sp/>to<sp/>the<sp/>final<sp/>destination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ae3d5c2249f60c69798050d058686fe15" kindref="member">coordinate_to_angle</ref>(<ref refid="_u_arm_text_control2_80_8ino_1ad8f739b670d0f419b1ced5f73ebf7be8" kindref="member">x_array</ref>[<ref refid="_u_arm_text_control2_80_8ino_1a68d9994b5de87e6b74f86ea71d4b1235" kindref="member">INTERP_INTVLS</ref>],<sp/><ref refid="_u_arm_text_control2_80_8ino_1a28c3e596a1eb1cdf2abf4547670252dd" kindref="member">y_array</ref>[INTERP_INTVLS],<sp/><ref refid="_u_arm_text_control2_80_8ino_1a6eaccd60e1a50799e6304a9aa199939c" kindref="member">z_array</ref>[INTERP_INTVLS],<sp/>rot,<sp/>left,<sp/>right);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="uarm__library_8cpp_1a090cc6fa82eb11487fd2c4a227f0b85c" kindref="member">uarm</ref>.<ref refid="classu_arm_class_1ad49f00b82c7217aea14992519db644c9" kindref="member">write_servo_angle</ref>(rot,<sp/>left,<sp/>right,<sp/><ref refid="_u_arm_text_control2_80_8ino_1ae2907ae42f334c7602f2ac09350ee545" kindref="member">currentHand</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStep<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/alex/Workspace/develop/uarm_metal/uarm4arduino/examples/UArmTextControl2.0/UArmTextControl2.0.ino"/>
  </compounddef>
</doxygen>
